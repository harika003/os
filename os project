A barbershop consists of a waiting room with n chairs and a barber room with one barber chair. If there are no customers to be served, the barber goes to sleep. If a customer enters the barbershop and all chairs are occupied, then the customer leaves the shop. If the barber is busy but chairs are available, then the customer sits in one of the free chairs. If the barber is asleep, the customer wakes up the barber. Write a program to coordinate the barber and the customers. 
import Utilities.*;        
import Synchronization.*;

class Barber extends MyObject implements Runnable {

   private Salon salon = null;

   public Barber(String name, Salon salon) {
      super(name);
      this.salon = salon;
      new Thread(this).start();
   }

   public void run() {
      while (true) {
         salon.wantToCut();
      }
   }          
}

class Customer extends MyObject implements Runnable {

   private int id = 0;
   private Salon salon = null;
   private int cutTime = 0;
   private int growTime = 0;

   public Customer(String name, int id, int cutTime,
         int growTime, Salon salon) {
      super(name + " " + id);
      this.id = id;
      this.salon = salon;
      this.cutTime = cutTime;
      this.growTime = growTime;
      new Thread(this).start();      
}

   public void run() {
      int napping;
      while (true) {
         napping = 1 + (int)random(growTime);
         System.out.println("age=" + age()
            + ", " + getName() + " growing hair " + napping + "ms");
         nap(napping);
         System.out.println("age=" + age()
            + ", " + getName() + " needs a haircut");
         salon.wantHairCut(id, cutTime);
      }
   }
