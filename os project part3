class SleepingBarber extends MyObject {

   public static void main(String[] args) {

     
      GetOpt go = new GetOpt(args, "Us:C:c:g:R:");
      go.optErr = true;
      String usage = "Usage: -s numChairs -C numCustomers"
         + " -c cutTime -g growTime -R runTime";
      int ch = -1;
      int numChairs = 5;         
      int numCustomers = 10;
      int cutTime = 2;    
      int growTime = 4;  
      int runTime = 60;  
      while ((ch = go.getopt()) != go.optEOF) {
         if      ((char)ch == 'U') {
            System.out.println(usage);  System.exit(0);
         }
         else if ((char)ch == 's') numChairs =
            go.processArg(go.optArgGet(), numChairs);
         else if ((char)ch == 'C') numCustomers =
            go.processArg(go.optArgGet(), numCustomers);
         else if ((char)ch == 'c') cutTime =
            go.processArg(go.optArgGet(), cutTime);
         else if ((char)ch == 'g') growTime =
            go.processArg(go.optArgGet(), growTime);
         else if ((char)ch == 'R')             
            runTime = go.processArg(go.optArgGet(), runTime);
         else {
            System.err.println(usage);  System.exit(1);
         }
      }
      System.out.println("SleepingBarber: numChairs=" + numChairs
         + ", numCustomers=" + numCustomers + ", cutTime=" + cutTime
         + ", growTime=" + growTime + ", runTime=" + runTime);

      
      Salon salon = new Salon("Salon", numChairs);

      new Barber("Barber", salon);
      
      for (int i = 0; i < numCustomers; i++)
         new Customer("Customer", i, cutTime*1000, growTime*1000, salon);    
      System.out.println("All Customer threads started");

     
      nap(runTime*1000);
      System.out.println("age()=" + age()
         + ", time to stop the Customers and exit");
      System.exit(0);
   }
}


